{"ast":null,"code":"var _jsxFileName = \"/workspaces/Smart-Inventory-Order-Management-System/frontend/src/pages/customer/CustomerOrders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getOrders, placeOrder } from \"../../api\";\nimport { Auth } from \"../../auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomerOrders() {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  useEffect(() => {\n    const user = Auth.getUser();\n    if (!user) return;\n    getOrders().then(data => {\n      setOrders(data.filter(o => o.customerId === user.id));\n    }).catch(() => setErrorMsg(\"Failed to load orders.\"));\n  }, []);\n  const handlePlaceOrder = async cart => {\n    const orderItems = cart.map(item => ({\n      product: {\n        id: item.id\n      },\n      quantity: item.quantity,\n      price: item.price // optional, if your backend uses it\n    }));\n    await placeOrder(orderItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"8\",\n      style: {\n        width: \"100%\",\n        marginTop: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.totalAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              style: {\n                fontSize: 12\n              },\n              children: JSON.stringify(order.items, null, 1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, order.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomerOrders, \"i7zoJA85NidvtraYz+9V4P/iC20=\");\n_c = CustomerOrders;\nvar _c;\n$RefreshReg$(_c, \"CustomerOrders\");","map":{"version":3,"names":["React","useEffect","useState","getOrders","placeOrder","Auth","jsxDEV","_jsxDEV","CustomerOrders","_s","orders","setOrders","errorMsg","setErrorMsg","user","getUser","then","data","filter","o","customerId","id","catch","handlePlaceOrder","cart","orderItems","map","item","product","quantity","price","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","border","cellPadding","width","marginTop","order","status","totalAmount","fontSize","JSON","stringify","items","_c","$RefreshReg$"],"sources":["/workspaces/Smart-Inventory-Order-Management-System/frontend/src/pages/customer/CustomerOrders.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getOrders, placeOrder } from \"../../api\";\nimport { Auth } from \"../../auth\";\n\nexport default function CustomerOrders() {\n  const [orders, setOrders] = useState([]);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  useEffect(() => {\n    const user = Auth.getUser();\n    if (!user) return;\n    getOrders().then(data => {\n      setOrders(data.filter(o => o.customerId === user.id));\n    }).catch(() => setErrorMsg(\"Failed to load orders.\"));\n  }, []);\n\n  const handlePlaceOrder = async (cart) => {\n    const orderItems = cart.map(item => ({\n      product: { id: item.id },\n      quantity: item.quantity,\n      price: item.price // optional, if your backend uses it\n    }));\n    await placeOrder(orderItems);\n  };\n\n  return (\n    <div>\n      <h2>My Orders</h2>\n      {errorMsg && <div style={{ color: \"red\" }}>{errorMsg}</div>}\n      <table border=\"1\" cellPadding=\"8\" style={{ width: \"100%\", marginTop: 16 }}>\n        <thead>\n          <tr>\n            <th>Order ID</th>\n            <th>Status</th>\n            <th>Total Amount</th>\n            <th>Details</th>\n          </tr>\n        </thead>\n        <tbody>\n          {orders.map(order => (\n            <tr key={order.id}>\n              <td>{order.id}</td>\n              <td>{order.status}</td>\n              <td>{order.totalAmount}</td>\n              <td>\n                <pre style={{ fontSize: 12 }}>{JSON.stringify(order.items, null, 1)}</pre>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table    >\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}