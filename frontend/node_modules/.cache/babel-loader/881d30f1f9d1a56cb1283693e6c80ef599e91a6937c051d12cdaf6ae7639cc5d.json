{"ast":null,"code":"// Simple auth store using localStorage\nexport const Auth = {\n  login(user, email, password) {\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"password\", password);\n  },\n  logout() {\n    localStorage.clear();\n  },\n  user() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  },\n  isAuthenticated() {\n    return !!localStorage.getItem(\"user\");\n  },\n  role() {\n    const u = Auth.user();\n    return u ? u.role : null;\n  },\n  getAuthHeader() {\n    const user = Auth.user();\n    const password = localStorage.getItem(\"password\");\n    if (!user || !password) return {};\n    return {\n      Authorization: \"Basic \" + btoa(`${user.email}:${password}`)\n    };\n  },\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  },\n  getUser() {\n    // Example: get user from localStorage or context\n    const user = localStorage.getItem(\"user\");\n    return user ? JSON.parse(user) : null;\n  }\n};","map":{"version":3,"names":["Auth","login","user","email","password","localStorage","setItem","JSON","stringify","logout","clear","parse","getItem","isAuthenticated","role","u","getAuthHeader","Authorization","btoa","getCurrentUser","getUser"],"sources":["/workspaces/Smart-Inventory-Order-Management-System/frontend/src/auth.js"],"sourcesContent":["// Simple auth store using localStorage\nexport const Auth = {\n  login(user, email, password) {\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"password\", password);\n  },\n  logout() {\n    localStorage.clear();\n  },\n  user() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  },\n  isAuthenticated() {\n    return !!localStorage.getItem(\"user\");\n  },\n  role() {\n    const u = Auth.user();\n    return u ? u.role : null;\n  },\n  getAuthHeader() {\n    const user = Auth.user();\n    const password = localStorage.getItem(\"password\");\n    if (!user || !password) return {};\n    return {\n      Authorization: \"Basic \" + btoa(`${user.email}:${password}`)\n    };\n  },\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  },\n  getUser() {\n    // Example: get user from localStorage or context\n    const user = localStorage.getItem(\"user\");\n    return user ? JSON.parse(user) : null;\n  }\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,IAAI,GAAG;EAClBC,KAAKA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;IAC3BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;IAClDG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;IACpCE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,QAAQ,CAAC;EAC5C,CAAC;EACDK,MAAMA,CAAA,EAAG;IACPJ,YAAY,CAACK,KAAK,CAAC,CAAC;EACtB,CAAC;EACDR,IAAIA,CAAA,EAAG;IACL,OAAOK,IAAI,CAACI,KAAK,CAACN,YAAY,CAACO,OAAO,CAAC,MAAM,CAAC,CAAC;EACjD,CAAC;EACDC,eAAeA,CAAA,EAAG;IAChB,OAAO,CAAC,CAACR,YAAY,CAACO,OAAO,CAAC,MAAM,CAAC;EACvC,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,MAAMC,CAAC,GAAGf,IAAI,CAACE,IAAI,CAAC,CAAC;IACrB,OAAOa,CAAC,GAAGA,CAAC,CAACD,IAAI,GAAG,IAAI;EAC1B,CAAC;EACDE,aAAaA,CAAA,EAAG;IACd,MAAMd,IAAI,GAAGF,IAAI,CAACE,IAAI,CAAC,CAAC;IACxB,MAAME,QAAQ,GAAGC,YAAY,CAACO,OAAO,CAAC,UAAU,CAAC;IACjD,IAAI,CAACV,IAAI,IAAI,CAACE,QAAQ,EAAE,OAAO,CAAC,CAAC;IACjC,OAAO;MACLa,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,GAAGhB,IAAI,CAACC,KAAK,IAAIC,QAAQ,EAAE;IAC5D,CAAC;EACH,CAAC;EACDe,cAAcA,CAAA,EAAG;IACf,OAAOZ,IAAI,CAACI,KAAK,CAACN,YAAY,CAACO,OAAO,CAAC,MAAM,CAAC,CAAC;EACjD,CAAC;EACDQ,OAAOA,CAAA,EAAG;IACR;IACA,MAAMlB,IAAI,GAAGG,YAAY,CAACO,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOV,IAAI,GAAGK,IAAI,CAACI,KAAK,CAACT,IAAI,CAAC,GAAG,IAAI;EACvC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}