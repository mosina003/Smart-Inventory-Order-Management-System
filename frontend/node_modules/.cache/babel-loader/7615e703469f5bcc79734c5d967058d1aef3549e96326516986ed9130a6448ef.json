{"ast":null,"code":"var _jsxFileName = \"/workspaces/Smart-Inventory-Order-Management-System/frontend/src/components/User/UserRoleUpdate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Auth } from \"../../auth\"; // <-- import Auth\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserRoleUpdate({\n  userId: userIdProp\n}) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const userId = userIdProp !== null && userIdProp !== void 0 ? userIdProp : id ? Number(id) : null;\n  const [role, setRole] = useState(\"CUSTOMER\");\n  const [message, setMessage] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userId) {\n      setMessage(\"No user selected.\");\n      return;\n    }\n    try {\n      const res = await fetch(`/api/users/${userId}/role?role=${role}`, {\n        method: \"PUT\",\n        headers: {\n          ...Auth.getAuthHeader()\n        }\n      });\n      if (!res.ok) throw new Error();\n      setMessage(\"Role updated!\");\n    } catch {\n      setMessage(\"Failed to update role.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: role,\n      onChange: e => setRole(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"CUSTOMER\",\n        children: \"Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"MANAGER\",\n        children: \"Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"STAFF\",\n        children: \"Staff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"SUPPLIER\",\n        children: \"Supplier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ADMIN\",\n        children: \"Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Role\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(UserRoleUpdate, \"qDyx/9nc6xJmwi9JDZYv3fjTIGc=\", false, function () {\n  return [useParams];\n});\n_c = UserRoleUpdate;\nvar _c;\n$RefreshReg$(_c, \"UserRoleUpdate\");","map":{"version":3,"names":["React","useState","useParams","Auth","jsxDEV","_jsxDEV","UserRoleUpdate","userId","userIdProp","_s","id","Number","role","setRole","message","setMessage","handleSubmit","e","preventDefault","res","fetch","method","headers","getAuthHeader","ok","Error","onSubmit","children","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/workspaces/Smart-Inventory-Order-Management-System/frontend/src/components/User/UserRoleUpdate.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Auth } from \"../../auth\"; // <-- import Auth\n\nexport default function UserRoleUpdate({ userId: userIdProp }) {\n  const { id } = useParams();\n  const userId = userIdProp ?? (id ? Number(id) : null);\n\n  const [role, setRole] = useState(\"CUSTOMER\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userId) {\n      setMessage(\"No user selected.\");\n      return;\n    }\n    try {\n      const res = await fetch(`/api/users/${userId}/role?role=${role}`, {\n        method: \"PUT\",\n        headers: {\n          ...Auth.getAuthHeader()\n        }\n      });\n      if (!res.ok) throw new Error();\n      setMessage(\"Role updated!\");\n    } catch {\n      setMessage(\"Failed to update role.\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <select value={role} onChange={e => setRole(e.target.value)}>\n        <option value=\"CUSTOMER\">Customer</option>\n        <option value=\"MANAGER\">Manager</option>\n        <option value=\"STAFF\">Staff</option>\n        <option value=\"SUPPLIER\">Supplier</option>\n        <option value=\"ADMIN\">Admin</option>\n      </select>\n      <button type=\"submit\">Update Role</button>\n      <div>{message}</div>\n    </form>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}