{"ast":null,"code":"const API_BASE = \"/api\";\nexport async function registerUser(data) {\n  const res = await fetch(`${API_BASE}/users/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error(\"Registration failed\");\n  return await res.json();\n}\nexport async function loginUser({\n  email,\n  password\n}) {\n  // Try to fetch the user profile as a login check\n  const res = await fetch(`/api/users/me`, {\n    headers: {\n      Authorization: \"Basic \" + btoa(`${email}:${password}`)\n    }\n  });\n  if (!res.ok) throw new Error(\"Login failed\");\n  return await res.json();\n}\n\n// Get user profile by ID\nexport async function getUserProfile(userId) {\n  const res = await fetch(`${API_BASE}/users/${userId}`, {\n    headers: {\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch user profile\");\n  return await res.json();\n}\n\n// Get all users\nexport async function getUserList() {\n  const res = await fetch(`${API_BASE}/users`, {\n    headers: {\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch user list\");\n  return await res.json();\n}\n\n// Update user role\nexport async function updateUserRole(userId, role) {\n  const res = await fetch(`${API_BASE}/users/${userId}/role?role=${role}`, {\n    method: \"PUT\",\n    headers: {\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to update user role\");\n  return await res.json();\n}\nexport async function getSuppliers() {\n  const res = await fetch(`${API_BASE}/suppliers`, {\n    headers: {\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch suppliers\");\n  return await res.json();\n}\nexport async function addSupplier(data) {\n  const res = await fetch(`${API_BASE}/suppliers`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error(\"Failed to add supplier\");\n  return await res.json();\n}\nexport async function updateSupplier(id, data) {\n  const res = await fetch(`${API_BASE}/suppliers/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error(\"Failed to update supplier\");\n  return await res.json();\n}\nexport async function deleteSupplier(id) {\n  const res = await fetch(`${API_BASE}/suppliers/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to delete supplier\");\n  return true;\n}\nexport async function getProducts() {\n  const res = await fetch(`${API_BASE}/products`, {\n    headers: {\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch products\");\n  return await res.json();\n}\nexport async function addProduct(data) {\n  const res = await fetch(`${API_BASE}/products`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error(\"Failed to add product\");\n  return await res.json();\n}\nexport async function updateProduct(id, data) {\n  const res = await fetch(`${API_BASE}/products/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error(\"Failed to update product\");\n  return await res.json();\n}\nexport async function deleteProduct(id) {\n  const res = await fetch(`${API_BASE}/products/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to delete product\");\n  return true;\n}\nexport async function getOrders() {\n  const res = await fetch(`${API_BASE}/orders`, {\n    headers: {\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch orders\");\n  return await res.json();\n}\nexport async function getOrderById(id) {\n  const res = await fetch(`${API_BASE}/orders/${id}`, {\n    headers: {\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch order\");\n  return await res.json();\n}\nexport async function placeOrder(data) {\n  const res = await fetch(`${API_BASE}/orders`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error(\"Failed to place order\");\n  return await res.json();\n}\nexport async function updateOrderStatus(id, status) {\n  const res = await fetch(`${API_BASE}/orders/${id}/status?status=${encodeURIComponent(status)}`, {\n    method: \"PUT\",\n    headers: {\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to update order status\");\n  return await res.json();\n}\nexport async function getPendingUsers(rolesCsv = \"MANAGER,STAFF,SUPPLIER\") {\n  const res = await fetch(`${API_BASE}/users/pending?roles=${encodeURIComponent(rolesCsv)}`, {\n    headers: {\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to load pending users\");\n  return res.json();\n}\nexport async function verifyUser(id) {\n  const res = await fetch(`${API_BASE}/users/${id}/verify`, {\n    method: \"PUT\",\n    headers: {\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to verify user\");\n  return res.json();\n}\nexport async function deleteUser(id) {\n  const res = await fetch(`${API_BASE}/users/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    }\n  });\n  if (!res.ok) throw new Error(\"Failed to delete user\");\n  return true;\n}","map":{"version":3,"names":["API_BASE","registerUser","data","res","fetch","method","headers","body","JSON","stringify","ok","Error","json","loginUser","email","password","Authorization","btoa","getUserProfile","userId","getUserList","updateUserRole","role","getSuppliers","addSupplier","updateSupplier","id","deleteSupplier","getProducts","addProduct","updateProduct","deleteProduct","getOrders","getOrderById","placeOrder","updateOrderStatus","status","encodeURIComponent","getPendingUsers","rolesCsv","verifyUser","deleteUser"],"sources":["/workspaces/Smart-Inventory-Order-Management-System/frontend/src/api.js"],"sourcesContent":["const API_BASE = \"/api\";\n\nexport async function registerUser(data) {\n  const res = await fetch(`${API_BASE}/users/register`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error(\"Registration failed\");\n  return await res.json();\n}\n\nexport async function loginUser({ email, password }) {\n  // Try to fetch the user profile as a login check\n  const res = await fetch(`/api/users/me`, {\n    headers: {\n      Authorization: \"Basic \" + btoa(`${email}:${password}`)\n    }\n  });\n  if (!res.ok) throw new Error(\"Login failed\");\n  return await res.json();\n}\n\n// Get user profile by ID\nexport async function getUserProfile(userId) {\n  const res = await fetch(`${API_BASE}/users/${userId}`, {\n    headers: { Authorization: \"Basic \" + btoa(\"admin:adminpwd\") }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch user profile\");\n  return await res.json();\n}\n\n// Get all users\nexport async function getUserList() {\n  const res = await fetch(`${API_BASE}/users`, {\n    headers: { Authorization: \"Basic \" + btoa(\"admin:adminpwd\") }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch user list\");\n  return await res.json();\n}\n\n// Update user role\nexport async function updateUserRole(userId, role) {\n  const res = await fetch(`${API_BASE}/users/${userId}/role?role=${role}`, {\n    method: \"PUT\",\n    headers: { Authorization: \"Basic \" + btoa(\"admin:adminpwd\") }\n  });\n  if (!res.ok) throw new Error(\"Failed to update user role\");\n  return await res.json();\n}\n\nexport async function getSuppliers() {\n  const res = await fetch(`${API_BASE}/suppliers`, {\n    headers: { Authorization: \"Basic \" + btoa(\"admin:adminpwd\") }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch suppliers\");\n  return await res.json();\n}\n\nexport async function addSupplier(data) {\n  const res = await fetch(`${API_BASE}/suppliers`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error(\"Failed to add supplier\");\n  return await res.json();\n}\n\nexport async function updateSupplier(id, data) {\n  const res = await fetch(`${API_BASE}/suppliers/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error(\"Failed to update supplier\");\n  return await res.json();\n}\n\nexport async function deleteSupplier(id) {\n  const res = await fetch(`${API_BASE}/suppliers/${id}`, {\n    method: \"DELETE\",\n    headers: { Authorization: \"Basic \" + btoa(\"admin:adminpwd\") }\n  });\n  if (!res.ok) throw new Error(\"Failed to delete supplier\");\n  return true;\n}\n\nexport async function getProducts() {\n  const res = await fetch(`${API_BASE}/products`, {\n    headers: { Authorization: \"Basic \" + btoa(\"admin:adminpwd\") }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch products\");\n  return await res.json();\n}\n\nexport async function addProduct(data) {\n  const res = await fetch(`${API_BASE}/products`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error(\"Failed to add product\");\n  return await res.json();\n}\n\nexport async function updateProduct(id, data) {\n  const res = await fetch(`${API_BASE}/products/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error(\"Failed to update product\");\n  return await res.json();\n}\n\nexport async function deleteProduct(id) {\n  const res = await fetch(`${API_BASE}/products/${id}`, {\n    method: \"DELETE\",\n    headers: { Authorization: \"Basic \" + btoa(\"admin:adminpwd\") }\n  });\n  if (!res.ok) throw new Error(\"Failed to delete product\");\n  return true;\n}\n\nexport async function getOrders() {\n  const res = await fetch(`${API_BASE}/orders`, {\n    headers: { Authorization: \"Basic \" + btoa(\"admin:adminpwd\") }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch orders\");\n  return await res.json();\n}\n\nexport async function getOrderById(id) {\n  const res = await fetch(`${API_BASE}/orders/${id}`, {\n    headers: { Authorization: \"Basic \" + btoa(\"admin:adminpwd\") }\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch order\");\n  return await res.json();\n}\n\nexport async function placeOrder(data) {\n  const res = await fetch(`${API_BASE}/orders`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Basic \" + btoa(\"admin:adminpwd\")\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error(\"Failed to place order\");\n  return await res.json();\n}\n\nexport async function updateOrderStatus(id, status) {\n  const res = await fetch(`${API_BASE}/orders/${id}/status?status=${encodeURIComponent(status)}`, {\n    method: \"PUT\",\n    headers: { Authorization: \"Basic \" + btoa(\"admin:adminpwd\") }\n  });\n  if (!res.ok) throw new Error(\"Failed to update order status\");\n  return await res.json();\n}\n\nexport async function getPendingUsers(rolesCsv = \"MANAGER,STAFF,SUPPLIER\") {\n  const res = await fetch(`${API_BASE}/users/pending?roles=${encodeURIComponent(rolesCsv)}`, {\n    headers: { Authorization: \"Basic \" + btoa(\"admin:adminpwd\") }\n  });\n  if (!res.ok) throw new Error(\"Failed to load pending users\");\n  return res.json();\n}\n\nexport async function verifyUser(id) {\n  const res = await fetch(`${API_BASE}/users/${id}/verify`, {\n    method: \"PUT\",\n    headers: { Authorization: \"Basic \" + btoa(\"admin:adminpwd\") }\n  });\n  if (!res.ok) throw new Error(\"Failed to verify user\");\n  return res.json();\n}\n\nexport async function deleteUser(id) {\n  const res = await fetch(`${API_BASE}/users/${id}`, {\n    method: \"DELETE\",\n    headers: { Authorization: \"Basic \" + btoa(\"admin:adminpwd\") }\n  });\n  if (!res.ok) throw new Error(\"Failed to delete user\");\n  return true;\n}"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,MAAM;AAEvB,OAAO,eAAeC,YAAYA,CAACC,IAAI,EAAE;EACvC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,iBAAiB,EAAE;IACpDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACnD,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeC,SAASA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EACnD;EACA,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;IACvCE,OAAO,EAAE;MACPU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,GAAGH,KAAK,IAAIC,QAAQ,EAAE;IACvD;EACF,CAAC,CAAC;EACF,IAAI,CAACZ,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EAC5C,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;;AAEA;AACA,OAAO,eAAeM,cAAcA,CAACC,MAAM,EAAE;EAC3C,MAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,UAAUmB,MAAM,EAAE,EAAE;IACrDb,OAAO,EAAE;MAAEU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IAAE;EAC9D,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;;AAEA;AACA,OAAO,eAAeQ,WAAWA,CAAA,EAAG;EAClC,MAAMjB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,QAAQ,EAAE;IAC3CM,OAAO,EAAE;MAAEU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IAAE;EAC9D,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EACzD,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;;AAEA;AACA,OAAO,eAAeS,cAAcA,CAACF,MAAM,EAAEG,IAAI,EAAE;EACjD,MAAMnB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,UAAUmB,MAAM,cAAcG,IAAI,EAAE,EAAE;IACvEjB,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAEU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IAAE;EAC9D,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC1D,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeW,YAAYA,CAAA,EAAG;EACnC,MAAMpB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,YAAY,EAAE;IAC/CM,OAAO,EAAE;MAAEU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IAAE;EAC9D,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EACzD,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeY,WAAWA,CAACtB,IAAI,EAAE;EACtC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,YAAY,EAAE;IAC/CK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IACjD,CAAC;IACDV,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACtD,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAea,cAAcA,CAACC,EAAE,EAAExB,IAAI,EAAE;EAC7C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,cAAc0B,EAAE,EAAE,EAAE;IACrDrB,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IACjD,CAAC;IACDV,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EACzD,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAee,cAAcA,CAACD,EAAE,EAAE;EACvC,MAAMvB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,cAAc0B,EAAE,EAAE,EAAE;IACrDrB,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MAAEU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IAAE;EAC9D,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EACzD,OAAO,IAAI;AACb;AAEA,OAAO,eAAeiB,WAAWA,CAAA,EAAG;EAClC,MAAMzB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,WAAW,EAAE;IAC9CM,OAAO,EAAE;MAAEU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IAAE;EAC9D,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EACxD,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeiB,UAAUA,CAAC3B,IAAI,EAAE;EACrC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,WAAW,EAAE;IAC9CK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IACjD,CAAC;IACDV,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAekB,aAAaA,CAACJ,EAAE,EAAExB,IAAI,EAAE;EAC5C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,aAAa0B,EAAE,EAAE,EAAE;IACpDrB,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IACjD,CAAC;IACDV,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EACxD,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAemB,aAAaA,CAACL,EAAE,EAAE;EACtC,MAAMvB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,aAAa0B,EAAE,EAAE,EAAE;IACpDrB,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MAAEU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IAAE;EAC9D,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EACxD,OAAO,IAAI;AACb;AAEA,OAAO,eAAeqB,SAASA,CAAA,EAAG;EAChC,MAAM7B,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,SAAS,EAAE;IAC5CM,OAAO,EAAE;MAAEU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IAAE;EAC9D,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACtD,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeqB,YAAYA,CAACP,EAAE,EAAE;EACrC,MAAMvB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,WAAW0B,EAAE,EAAE,EAAE;IAClDpB,OAAO,EAAE;MAAEU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IAAE;EAC9D,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAesB,UAAUA,CAAChC,IAAI,EAAE;EACrC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,SAAS,EAAE;IAC5CK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IACjD,CAAC;IACDV,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeuB,iBAAiBA,CAACT,EAAE,EAAEU,MAAM,EAAE;EAClD,MAAMjC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,WAAW0B,EAAE,kBAAkBW,kBAAkB,CAACD,MAAM,CAAC,EAAE,EAAE;IAC9F/B,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAEU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IAAE;EAC9D,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAC7D,OAAO,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAe0B,eAAeA,CAACC,QAAQ,GAAG,wBAAwB,EAAE;EACzE,MAAMpC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,wBAAwBqC,kBAAkB,CAACE,QAAQ,CAAC,EAAE,EAAE;IACzFjC,OAAO,EAAE;MAAEU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IAAE;EAC9D,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,OAAOR,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAe4B,UAAUA,CAACd,EAAE,EAAE;EACnC,MAAMvB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,UAAU0B,EAAE,SAAS,EAAE;IACxDrB,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAEU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IAAE;EAC9D,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAOR,GAAG,CAACS,IAAI,CAAC,CAAC;AACnB;AAEA,OAAO,eAAe6B,UAAUA,CAACf,EAAE,EAAE;EACnC,MAAMvB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,UAAU0B,EAAE,EAAE,EAAE;IACjDrB,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MAAEU,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,gBAAgB;IAAE;EAC9D,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}